# A generic, single database configuration.

[alembic]
# path to migration scripts
script_location = alembic

# template used to generate migration file names; The default value is %%(rev)s_%%(slug)s
file_template = %%(epoch)s_%%(rev)s_%%(slug)s  # use UNIX epoch for filename ordering

# This is prepended to `sys.path` before running migrations, defaults to the current directory.
prepend_sys_path = .

# timezone to use when rendering the date within the migration file as well as the filename.
# we use UTC always; filenames are UNIX epoch so this only affects docstrings
timezone = UTC

# max length of characters to apply to the "slug" field
truncate_slug_length = 32

# set to 'true' to run the environment during the 'revision' command, regardless of autogenerate
# revision_environment = false

# set 'true' to allow .pyc and .pyo files to be used as revision sources, without a parent .py
# sourceless = false

# version location specification; This defaults to alembic/versions.
# not currently using this, but it's here in case we want to later
# version_locations = %(here)s/bar:%(here)s/bat:alembic/versions

# version path separator; As mentioned above, this is the character used to split version_locations.
# use UNIX pathsep, in case we *do* use version_locations later.
version_path_separator = :

# set to 'true' to search source files recursively in each "version_locations" directory
recursive_version_locations = false

# the output encoding used when revision files are written from script.py.mako
output_encoding = utf-8

# env.py loads the bot's Settings() object, so this is only used as a fallback.
sqlalchemy.url = postgresql+psycopg://postgres:postgres@localhost:2027/discosnake


## post-write hooks (formatters, linters etc) for generated migration scripts
[post_write_hooks]
hooks = black

# Options for `black` hook
black.type = console_scripts
black.entrypoint = black
black.options = -q --config pyproject.toml REVISION_SCRIPT_FILENAME
black.cwd = %(here)s


## Logging configuration
[loggers]
keys = root,sqlalchemy,alembic,alembic_utils

[handlers]
keys = console

[formatters]
keys = generic

[logger_root]
level = WARN
handlers = console
qualname =

[logger_sqlalchemy]
level = WARN
handlers =
qualname = sqlalchemy.engine

[logger_alembic]
level = INFO
handlers =
qualname = alembic

[logger_alembic_utils]
level = INFO
handlers =
qualname = alembic_utils

[handler_console]
class = StreamHandler
args = (sys.stderr,)
level = NOTSET
formatter = generic

[formatter_generic]
format = %(levelname)-5.5s [%(name)s] %(message)s
datefmt = %H:%M:%S
