[project]
name = "disco-snake"
authors = [
    { name = "Andi Powers-Holmes", email = "aholmes@omnom.net" },
]
description = "A discord chatbot (for weebs)"
readme = "README.md"
requires-python = ">=3.10"
license = { file = "LICENSE.md" }
keywords = [
    "deep-learning",
    "machine-learning",
    "discord",
    "chatbot",
]
classifiers = [
    "Programming Language :: Python :: 3",
]
dynamic = ["version"]
dependencies = [
    "aiohttp >= 3.8.1, < 4.0.0",
    "alembic >= 1.10.4",
    "alembic_utils >= 0.8.1",
    "async_lru >= 2.0.2",
    "colorama >= 0.4.5",
    "daemonocle >= 1.2.3",
    "disnake >= 2.8.1",
    "ftfy >= 6.1.1",
    "gradio >= 3.32.0",
    "hf-transfer",
    "humanize >= 4.2.1, < 5.0.0",
    "levenshtein >= 0.21.0, < 0.22.0",
    "lru-dict >= 1.2.0, < 2.0.0",
    "pillow >= 9.5.0",
    "protobuf >= 4.25.0",
    "psycopg >= 3.1.0, < 3.2.0",
    "psycopg-binary >= 3.1.0, < 3.2.0",
    "psycopg-pool >= 3.1.0, < 3.2.0",
    "pgvector >= 0.1.8, <1.0.0",
    "pydantic>=2.11.0",
    "pydantic-extra-types>=2.10.3",
    "pydantic-settings>=2.8.0",
    "PyNaCl >= 1.5.0",
    "python-dotenv >= 1.0.0",
    "rich>=13.0.0",
    "safetensors >= 0.3.1",
    "sentencepiece >= 0.1.99",
    "sqlalchemy[asyncio] >= 2.0.13, < 2.1.0",
    "supervisor >= 4.2.5, < 5.0.0",
    "tokenizers >= 0.13.3",
    "torch >= 2.6.0, < 3.0.0",
    "torchvision>=0.21.0",
    "transformers >= 4.37.0, < 5.0.0",
    "typer >= 0.15.0, < 1.0.0",
    "uvloop >= 0.17.0, < 0.18.0",
    "cachetools>=5.5.2",
]

[dependency-groups]
dev = [
    "ruff >= 0.11.0",
    "setuptools-scm >= 8.0.0",
    "pre-commit >= 3.0.0",
    "ipython >= 8.0.0",
]
docs = [
    "sphinx >= 6.2.0",
    "sphinx-rtd-theme >= 1.0.0",
]


[tool.uv]
default-groups = [
    "dev",
    "docs",
]

[project.scripts]
disco-snake = "disco_snake.cli:cli"
multisnake = "multisnake.app:app"

[build-system]
build-backend = "setuptools.build_meta"
requires = ["setuptools>=64", "wheel", "setuptools_scm>=8"]

[tool.setuptools.packages.find]
namespaces = true
where = ["src"]
include = [
    "ai",
    "cogs",
    "db",
    "disco_snake*",
    "exceptions",
    "helpers",
    "logsnake",
    "multisnake",
    "shimeji",
]

[tool.setuptools.package-data]
"*" = [
    "*.css",
    "*.json",
    "*.js",
    "*.md",
    "*.txt",
]
"ai" = [
    "*.model",
    "*.safetensors",
]

[tool.ruff]
line-length = 110
target-version = 'py310'
extend-exclude = ["/usr/lib/*"]

[tool.ruff.lint]
ignore = [
    "F841", # local variable assigned but never used
    "F842", # local variable annotated but never used
    "E501", # line too long - will be fixed in format
]

[tool.ruff.lint.isort]
combine-as-imports = true
force-wrap-aliases = true
known-local-folder = ["src"]
known-first-party = [
    "ai",
    "cogs",
    "db",
    "disco_snake",
    "exceptions",
    "helpers",
    "logsnake",
    "multisnake",
    "shimeji",
]
known-third-party = ["alembic", "disnake"]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
line-ending = "auto"
skip-magic-trailing-comma = false
docstring-code-format = true
exclude = [
    "src/disco_snake/_version.py", # generated by setuptools_scm
]

[tool.pyright]
include = ["src"]
exclude = [
    "**/__pycache__", # cache directories
    "./typings",      # generated type stubs
]
ignore = [
    "./.venv/**", # virtualenv
    "/usr/**",    # system libraries
]
stubPath = "./typings"
analyzeUnannotatedFunctions = true
reportAttributeAccessIssue = false
reportRedeclaration = false
reportReturnType = false
reportArgumentType = false

# needs to be last for CI reasons
[tool.setuptools_scm]
write_to = "src/disco_snake/_version.py"
version_scheme = "post-release"
